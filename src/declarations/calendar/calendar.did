type TimeInterval = 
 record {
   begin: Time;
   end: Time;
 };
type Time = int;
type CalendarEntry = 
 record {
   creator: principal;
   date: TimeInterval;
   description: text;
   id: nat32;
   link: text;
   place: text;
   status: variant {
             AVAILABLE;
             PROVISIONAL;
             UNAVAILABLE;
           };
   title: text;
   user: principal;
 };
service : {
  createEntry: (CalendarEntry) -> (nat32);
  deleteEntry: (principal, nat32) -> ();
  listEntries: () -> (vec record {
                            principal;
                            vec CalendarEntry;
                          }) query;
  listEntriesOfUser: (principal) -> (vec CalendarEntry) query;
  listEntriesOfUsers: (vec principal) ->
   (vec record {
          principal;
          vec CalendarEntry;
        }) query;
  readEntry: (principal, nat32) -> (opt CalendarEntry) query;
  updateEntry: (CalendarEntry) -> (nat32);
}
