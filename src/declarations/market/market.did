type UserInfo = 
 record {
   description: text;
   firstName: text;
   id: principal;
   lastName: text;
 };
type MarketInfo = 
 record {
   description: text;
   id: principal;
   name: text;
 };
type Market = 
 service {
   addUser: (UserInfo) -> ();
   createConcept: (ConceptInfo) -> (nat32);
   deleteConcept: (nat32) -> ();
   deleteUser: (principal) -> ();
   listConcepts: () -> (vec ConceptInfo) query;
   listUsers: () -> (vec UserInfo) query;
   readConcept: (nat32) -> (opt ConceptInfo) query;
   readInfo: () -> (MarketInfo) query;
   readUser: (principal) -> (opt UserInfo) query;
   updateConcept: (ConceptInfo) -> (nat32);
   updateInfo: (MarketInfo) -> ();
   updateUser: (UserInfo) -> (UserInfo);
 };
type ConceptInfo = 
 record {
   description: text;
   id: nat32;
   preferredLabel: text;
 };
service : (record {
             description: text;
             name: text;
           }) -> Market
